//
// FilmSequelsAndPrequelsResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct FilmSequelsAndPrequelsResponse: Sendable, Codable, JSONEncodable, Hashable {

    public enum RelationType: String, Sendable, Codable, CaseIterable {
        case sequel = "SEQUEL"
        case prequel = "PREQUEL"
        case remake = "REMAKE"
        case unknown = "UNKNOWN"
    }
    public var filmId: Int
    public var nameRu: String
    public var nameEn: String
    public var nameOriginal: String
    public var posterUrl: String
    public var posterUrlPreview: String
    public var relationType: RelationType

    public init(filmId: Int, nameRu: String, nameEn: String, nameOriginal: String, posterUrl: String, posterUrlPreview: String, relationType: RelationType) {
        self.filmId = filmId
        self.nameRu = nameRu
        self.nameEn = nameEn
        self.nameOriginal = nameOriginal
        self.posterUrl = posterUrl
        self.posterUrlPreview = posterUrlPreview
        self.relationType = relationType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case filmId
        case nameRu
        case nameEn
        case nameOriginal
        case posterUrl
        case posterUrlPreview
        case relationType
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(filmId, forKey: .filmId)
        try container.encode(nameRu, forKey: .nameRu)
        try container.encode(nameEn, forKey: .nameEn)
        try container.encode(nameOriginal, forKey: .nameOriginal)
        try container.encode(posterUrl, forKey: .posterUrl)
        try container.encode(posterUrlPreview, forKey: .posterUrlPreview)
        try container.encode(relationType, forKey: .relationType)
    }
}

