//
// Award.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct Award: Sendable, Codable, JSONEncodable, Hashable {

    public var name: String
    public var win: Bool
    public var imageUrl: String?
    public var nominationName: String
    public var year: Int
    public var persons: [AwardPerson]?

    public init(name: String, win: Bool, imageUrl: String?, nominationName: String, year: Int, persons: [AwardPerson]? = nil) {
        self.name = name
        self.win = win
        self.imageUrl = imageUrl
        self.nominationName = nominationName
        self.year = year
        self.persons = persons
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case win
        case imageUrl
        case nominationName
        case year
        case persons
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(win, forKey: .win)
        try container.encode(imageUrl, forKey: .imageUrl)
        try container.encode(nominationName, forKey: .nominationName)
        try container.encode(year, forKey: .year)
        try container.encodeIfPresent(persons, forKey: .persons)
    }
}

