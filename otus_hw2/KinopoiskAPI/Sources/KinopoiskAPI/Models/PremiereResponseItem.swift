//
// PremiereResponseItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct PremiereResponseItem: Sendable, Codable, JSONEncodable, Hashable {

    public var kinopoiskId: Int
    public var nameRu: String?
    public var nameEn: String?
    public var year: Int
    public var posterUrl: String
    public var posterUrlPreview: String
    public var countries: [Country]
    public var genres: [Genre]
    public var duration: Int?
    public var premiereRu: String

    public init(kinopoiskId: Int, nameRu: String?, nameEn: String?, year: Int, posterUrl: String, posterUrlPreview: String, countries: [Country], genres: [Genre], duration: Int?, premiereRu: String) {
        self.kinopoiskId = kinopoiskId
        self.nameRu = nameRu
        self.nameEn = nameEn
        self.year = year
        self.posterUrl = posterUrl
        self.posterUrlPreview = posterUrlPreview
        self.countries = countries
        self.genres = genres
        self.duration = duration
        self.premiereRu = premiereRu
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case kinopoiskId
        case nameRu
        case nameEn
        case year
        case posterUrl
        case posterUrlPreview
        case countries
        case genres
        case duration
        case premiereRu
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(kinopoiskId, forKey: .kinopoiskId)
        try container.encode(nameRu, forKey: .nameRu)
        try container.encode(nameEn, forKey: .nameEn)
        try container.encode(year, forKey: .year)
        try container.encode(posterUrl, forKey: .posterUrl)
        try container.encode(posterUrlPreview, forKey: .posterUrlPreview)
        try container.encode(countries, forKey: .countries)
        try container.encode(genres, forKey: .genres)
        try container.encode(duration, forKey: .duration)
        try container.encode(premiereRu, forKey: .premiereRu)
    }
}

