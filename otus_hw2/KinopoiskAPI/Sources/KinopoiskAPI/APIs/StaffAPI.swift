//
// StaffAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class StaffAPI {

    /**
     получить данные об актерах, режисерах и т.д. по kinopoisk film id
     
     - parameter filmId: (query) kinopoisk film id 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: [StaffResponse]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1StaffGet(filmId: Int, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> [StaffResponse] {
        return try await apiV1StaffGetWithRequestBuilder(filmId: filmId, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     получить данные об актерах, режисерах и т.д. по kinopoisk film id
     - GET /api/v1/staff
     - parameter filmId: (query) kinopoisk film id 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<[StaffResponse]> 
     */
    open class func apiV1StaffGetWithRequestBuilder(filmId: Int, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<[StaffResponse]> {
        let localVariablePath = "/api/v1/staff"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "filmId": (wrappedValue: filmId.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[StaffResponse]>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**
     получить данные о конкретном человеке по kinopoisk person id
     
     - parameter id: (path) kinopoisk person id 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: PersonResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1StaffIdGet(id: Int, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> PersonResponse {
        return try await apiV1StaffIdGetWithRequestBuilder(id: id, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     получить данные о конкретном человеке по kinopoisk person id
     - GET /api/v1/staff/{id}
     - parameter id: (path) kinopoisk person id 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<PersonResponse> 
     */
    open class func apiV1StaffIdGetWithRequestBuilder(id: Int, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<PersonResponse> {
        var localVariablePath = "/api/v1/staff/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<PersonResponse>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }
}
