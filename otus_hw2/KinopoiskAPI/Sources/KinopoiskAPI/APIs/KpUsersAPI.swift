//
// KpUsersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class KpUsersAPI {

    /**
     получить данные об оценках пользователя
     
     - parameter id: (path) id пользователя на сайте кинопоиск 
     - parameter page: (query) номер страницы (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: KinopoiskUserVoteResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1KpUsersIdVotesGet(id: Int, page: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) async throws(ErrorResponse) -> KinopoiskUserVoteResponse {
        return try await apiV1KpUsersIdVotesGetWithRequestBuilder(id: id, page: page, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     получить данные об оценках пользователя
     - GET /api/v1/kp_users/{id}/votes
     - Одна страница может содержать до 20 элементов в items. Доступны не все оценки пользователя, а примерно 1500 последних
     - parameter id: (path) id пользователя на сайте кинопоиск 
     - parameter page: (query) номер страницы (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<KinopoiskUserVoteResponse> 
     */
    open class func apiV1KpUsersIdVotesGetWithRequestBuilder(id: Int, page: Int? = nil, apiConfiguration: OpenAPIClientAPIConfiguration = OpenAPIClientAPIConfiguration.shared) -> RequestBuilder<KinopoiskUserVoteResponse> {
        var localVariablePath = "/api/v1/kp_users/{id}/votes"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.encodeToJSON(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<KinopoiskUserVoteResponse>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }
}
